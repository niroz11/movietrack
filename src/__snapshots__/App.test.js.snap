// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot with all data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    nowPlayingMovies={[MockFunction]}
    popularMovies={[MockFunction]}
    topratedMovies={[MockFunction]}
    user={
      Object {
        "id": 1,
        "name": "taylor",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
        >
          <div
            className="heading-title"
          >
            <h1>
              MovieTrack
            </h1>
          </div>
          <div>
            <NavLink
              className="login-button"
              to="/logout"
            >
              Logout
            </NavLink>
            <NavLink
              className="signup-button"
              to="/signup"
            >
              Signup
            </NavLink>
            <NavLink
              className="favorites-button"
              to="/favorites"
            >
              Favorites
            </NavLink>
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/signup"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/favorites"
            />
          </div>
        </header>,
        <section
          className="movies-container"
        >
          <Route
            exact={true}
            path="/movie/:id"
            render={[Function]}
          />
          <div
            className="now-playing movie-section"
          >
            <h1>
              Now playing movies
            </h1>
            <Connect(Nowplayingmovies) />
          </div>
          <div
            className="toprated-movies movie-section"
          >
            <h1>
              Top rated movies
            </h1>
            <Connect(Toprated) />
          </div>
          <div
            className="popular-movies movie-section"
          >
            <h1>
              Popular movies
            </h1>
            <Connect(Popularmovies) />
          </div>
        </section>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="heading-title"
            >
              <h1>
                MovieTrack
              </h1>
            </div>,
            <div>
              <NavLink
                className="login-button"
                to="/logout"
              >
                Logout
              </NavLink>
              <NavLink
                className="signup-button"
                to="/signup"
              >
                Signup
              </NavLink>
              <NavLink
                className="favorites-button"
                to="/favorites"
              >
                Favorites
              </NavLink>
              <Route
                component={[Function]}
                exact={true}
                path="/login"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/favorites"
              />
            </div>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1>
                MovieTrack
              </h1>,
              "className": "heading-title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "MovieTrack",
              },
              "ref": null,
              "rendered": "MovieTrack",
              "type": "h1",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavLink
                  className="login-button"
                  to="/logout"
                >
                  Logout
                </NavLink>,
                <NavLink
                  className="signup-button"
                  to="/signup"
                >
                  Signup
                </NavLink>,
                <NavLink
                  className="favorites-button"
                  to="/favorites"
                >
                  Favorites
                </NavLink>,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/login"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/signup"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/favorites"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Logout",
                  "className": "login-button",
                  "onClick": undefined,
                  "to": "/logout",
                },
                "ref": null,
                "rendered": "Logout",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Signup",
                  "className": "signup-button",
                  "to": "/signup",
                },
                "ref": null,
                "rendered": "Signup",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Favorites",
                  "className": "favorites-button",
                  "to": "/favorites",
                },
                "ref": null,
                "rendered": "Favorites",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/signup",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/favorites",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Route
              exact={true}
              path="/movie/:id"
              render={[Function]}
            />,
            <div
              className="now-playing movie-section"
            >
              <h1>
                Now playing movies
              </h1>
              <Connect(Nowplayingmovies) />
            </div>,
            <div
              className="toprated-movies movie-section"
            >
              <h1>
                Top rated movies
              </h1>
              <Connect(Toprated) />
            </div>,
            <div
              className="popular-movies movie-section"
            >
              <h1>
                Popular movies
              </h1>
              <Connect(Popularmovies) />
            </div>,
          ],
          "className": "movies-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "exact": true,
              "path": "/movie/:id",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Now playing movies
                </h1>,
                <Connect(Nowplayingmovies) />,
              ],
              "className": "now-playing movie-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Now playing movies",
                },
                "ref": null,
                "rendered": "Now playing movies",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Top rated movies
                </h1>,
                <Connect(Toprated) />,
              ],
              "className": "toprated-movies movie-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Top rated movies",
                },
                "ref": null,
                "rendered": "Top rated movies",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Popular movies
                </h1>,
                <Connect(Popularmovies) />,
              ],
              "className": "popular-movies movie-section",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Popular movies",
                },
                "ref": null,
                "rendered": "Popular movies",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "section",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
          >
            <div
              className="heading-title"
            >
              <h1>
                MovieTrack
              </h1>
            </div>
            <div>
              <NavLink
                className="login-button"
                to="/logout"
              >
                Logout
              </NavLink>
              <NavLink
                className="signup-button"
                to="/signup"
              >
                Signup
              </NavLink>
              <NavLink
                className="favorites-button"
                to="/favorites"
              >
                Favorites
              </NavLink>
              <Route
                component={[Function]}
                exact={true}
                path="/login"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/favorites"
              />
            </div>
          </header>,
          <section
            className="movies-container"
          >
            <Route
              exact={true}
              path="/movie/:id"
              render={[Function]}
            />
            <div
              className="now-playing movie-section"
            >
              <h1>
                Now playing movies
              </h1>
              <Connect(Nowplayingmovies) />
            </div>
            <div
              className="toprated-movies movie-section"
            >
              <h1>
                Top rated movies
              </h1>
              <Connect(Toprated) />
            </div>
            <div
              className="popular-movies movie-section"
            >
              <h1>
                Popular movies
              </h1>
              <Connect(Popularmovies) />
            </div>
          </section>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="heading-title"
              >
                <h1>
                  MovieTrack
                </h1>
              </div>,
              <div>
                <NavLink
                  className="login-button"
                  to="/logout"
                >
                  Logout
                </NavLink>
                <NavLink
                  className="signup-button"
                  to="/signup"
                >
                  Signup
                </NavLink>
                <NavLink
                  className="favorites-button"
                  to="/favorites"
                >
                  Favorites
                </NavLink>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/login"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/signup"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/favorites"
                />
              </div>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  MovieTrack
                </h1>,
                "className": "heading-title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "MovieTrack",
                },
                "ref": null,
                "rendered": "MovieTrack",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <NavLink
                    className="login-button"
                    to="/logout"
                  >
                    Logout
                  </NavLink>,
                  <NavLink
                    className="signup-button"
                    to="/signup"
                  >
                    Signup
                  </NavLink>,
                  <NavLink
                    className="favorites-button"
                    to="/favorites"
                  >
                    Favorites
                  </NavLink>,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/login"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/favorites"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Logout",
                    "className": "login-button",
                    "onClick": undefined,
                    "to": "/logout",
                  },
                  "ref": null,
                  "rendered": "Logout",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Signup",
                    "className": "signup-button",
                    "to": "/signup",
                  },
                  "ref": null,
                  "rendered": "Signup",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Favorites",
                    "className": "favorites-button",
                    "to": "/favorites",
                  },
                  "ref": null,
                  "rendered": "Favorites",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/login",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/signup",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/favorites",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Route
                exact={true}
                path="/movie/:id"
                render={[Function]}
              />,
              <div
                className="now-playing movie-section"
              >
                <h1>
                  Now playing movies
                </h1>
                <Connect(Nowplayingmovies) />
              </div>,
              <div
                className="toprated-movies movie-section"
              >
                <h1>
                  Top rated movies
                </h1>
                <Connect(Toprated) />
              </div>,
              <div
                className="popular-movies movie-section"
              >
                <h1>
                  Popular movies
                </h1>
                <Connect(Popularmovies) />
              </div>,
            ],
            "className": "movies-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "exact": true,
                "path": "/movie/:id",
                "render": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Now playing movies
                  </h1>,
                  <Connect(Nowplayingmovies) />,
                ],
                "className": "now-playing movie-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Now playing movies",
                  },
                  "ref": null,
                  "rendered": "Now playing movies",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Top rated movies
                  </h1>,
                  <Connect(Toprated) />,
                ],
                "className": "toprated-movies movie-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Top rated movies",
                  },
                  "ref": null,
                  "rendered": "Top rated movies",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Popular movies
                  </h1>,
                  <Connect(Popularmovies) />,
                ],
                "className": "popular-movies movie-section",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Popular movies",
                  },
                  "ref": null,
                  "rendered": "Popular movies",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "section",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
